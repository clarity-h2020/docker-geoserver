version: '2.1'

services:
   postgresql:
      image: kartoza/postgis:9.6-2.4
      container_name: ${COMPOSE_PROJECT_NAME}-postgresql
      environment:
        VIRTUAL_HOST: ${VIRTUAL_HOST}
        LETSENCRYPT_HOST: ${LETSENCRYPT_HOST}
        LETSENCRYPT_EMAIL: ${LETSENCRYPT_EMAIL}
        VIRTUAL_PORT: ${VIRTUAL_PORT}
      volumes:
      - ./postgresql_data:/var/lib/postgresql
      - ./postgresql_backups:/backups
      ports:
        - "5432:5432"
      env_file:
        - docker-env/db.env
      restart: on-failure
      healthcheck:
        test: "exit 0"
   geoserver:
      image: kartoza/geoserver:2.13.0
      container_name: ${COMPOSE_PROJECT_NAME}
      volumes:
      - ./geoserver_data:/opt/geoserver/data_dir
      ports:
        - "8600:8080"
      restart: on-failure
      env_file:
        - docker-env/geoserver.env
      depends_on:
        postgresql:
          condition: service_healthy
      healthcheck:
        test: curl --fail -s http://localhost:8080/ || exit 1
        interval: 1m30s
        timeout: 10s
        retries: 3

   postgresql-dbbackups:
     image: kartoza/pg-backup:9.6
     container_name: ${COMPOSE_PROJECT_NAME}-postgresql-backups
     volumes:
     - ./postgresql_backups:/backups
     env_file:
     - docker-env/db-backups.env
     restart: on-failure
     depends_on:
        postgresql:
          condition: service_healthy
networks:
  default:
    external:
      name: ${NETWORK:-clarity}
         